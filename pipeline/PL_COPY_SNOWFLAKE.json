{
	"name": "PL_COPY_SNOWFLAKE",
	"properties": {
		"activities": [
			{
				"name": "COPY_SNOWFLAKE_DATA",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SP-START-LOG-ENTRY",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SET_MAPPING_JSON",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeV2Source",
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_SNOWFLAKE_INPUT_ADF",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_CSV_Parquet_Processed_ADF",
						"type": "DatasetReference",
						"parameters": {
							"Trigger": {
								"value": "@pipeline().parameters.Trigger",
								"type": "Expression"
							},
							"FolderType": "@pipeline().parameters.FolderType"
						}
					}
				]
			},
			{
				"name": "LKUP_JOB_DETAILS",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[vb_get_job_dtls]",
						"storedProcedureParameters": {
							"TriggerName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.Trigger",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_AZ_SQL_Input",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "SP-START-LOG-ENTRY",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LKUP_JOB_DETAILS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[vb_start_log_entry]",
					"storedProcedureParameters": {
						"jobid": {
							"value": {
								"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"pipeline_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AZ_SQL_Input",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-SUCESS-LOG-ENTRY",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "COPY_SNOWFLAKE_DATA",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[vb_end_log_entry]",
					"storedProcedureParameters": {
						"error": {
							"value": null,
							"type": "String"
						},
						"jobid": {
							"value": {
								"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"pipeline_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AZ_SQL_Input",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-FAIL-LOG-ENTRY",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "COPY_SNOWFLAKE_DATA",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[vb_end_log_entry]",
					"storedProcedureParameters": {
						"error": {
							"value": {
								"value": "@activity('COPY_SNOWFLAKE_DATA').error.message",
								"type": "Expression"
							},
							"type": "String"
						},
						"jobid": {
							"value": {
								"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"pipeline_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AZ_SQL_Input",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SET_MAPPING_JSON",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Mapping",
					"value": {
						"value": "{\n    \"type\": \"TabularTranslator\",\n    \"mappings\": [\n        {\n            \"source\": {\n                \"name\": \"review_id\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewid\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"order_id\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"orderid\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"review_score\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewscore\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"review_comment_title\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewcommenttitle\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"review_comment_message\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewcommentmessage\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"review_creation_date\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewcreationdate\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"review_answer_timestamp\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewanswertimestamp\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n    ],\n    \"typeConversion\": true,\n    \"typeConversionSettings\": {\n        \"allowDataTruncation\": true,\n        \"treatBooleanAsNumber\": false\n    }\n}",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"Trigger": {
				"type": "string",
				"defaultValue": "@pipeline().parameters.Trigger"
			},
			"FolderType": {
				"type": "string",
				"defaultValue": "@pipeline().parameters.FolderType"
			}
		},
		"variables": {
			"Mapping": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-09-04T17:05:37Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}